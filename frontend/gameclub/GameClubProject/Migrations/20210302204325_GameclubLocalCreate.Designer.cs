// <auto-generated />
using System;
using GameClubProject;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GameClubProject.Migrations
{
    [DbContext(typeof(GameclubDBContext))]
    [Migration("20210302204325_GameclubLocalCreate")]
    partial class GameclubLocalCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GameClubProject.AlternativeGameName", b =>
                {
                    b.Property<int>("PKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("pKey")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AltName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("altName");

                    b.Property<string>("CheckSum")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("checkSum");

                    b.Property<string>("GameId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("gameID");

                    b.Property<string>("GameTitle")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("gameTitle");

                    b.HasKey("PKey")
                        .HasName("PK__alternat__4866A5D78439C31F");

                    b.HasIndex("GameId");

                    b.ToTable("alternativeGameNames");
                });

            modelBuilder.Entity("GameClubProject.MembershipStatus", b =>
                {
                    b.Property<int>("PKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("pKey")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("description");

                    b.Property<int>("MembershipStatusId")
                        .HasColumnType("int")
                        .HasColumnName("membershipStatusID");

                    b.HasKey("PKey")
                        .HasName("PK__membersh__4866A5D736439232");

                    b.HasIndex(new[] { "MembershipStatusId" }, "UQ__membersh__19137F51E3295E81")
                        .IsUnique();

                    b.HasIndex(new[] { "Description" }, "UQ__membersh__489B0D97AC3B0CD4")
                        .IsUnique();

                    b.ToTable("membershipStatus");
                });

            modelBuilder.Entity("GameClubProject.PersonalUserTrackedGame", b =>
                {
                    b.Property<int>("PKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("pKey")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GameId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("gameID");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("userID");

                    b.HasKey("PKey")
                        .HasName("PK__personal__4866A5D7D181A328");

                    b.HasIndex("GameId");

                    b.HasIndex("UserId");

                    b.ToTable("personalUserTrackedGames");
                });

            modelBuilder.Entity("GameClubProject.UserAccount", b =>
                {
                    b.Property<int>("PKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("pKey")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressCity")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("addressCity");

                    b.Property<string>("AddressState")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("addressState");

                    b.Property<string>("AddressStreet")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("addressStreet");

                    b.Property<string>("AddressStreet2")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("addressStreet2");

                    b.Property<string>("AddressZipCode")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("addressZipCode");

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion")
                        .HasColumnName("created_at");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("firstName");

                    b.Property<string>("LastName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("lastName");

                    b.Property<int>("MembershipStatusId")
                        .HasColumnType("int")
                        .HasColumnName("membershipStatusID");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("userID");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("userName");

                    b.HasKey("PKey")
                        .HasName("PK__userAcco__4866A5D719596C8F");

                    b.HasIndex("MembershipStatusId");

                    b.HasIndex(new[] { "UserName" }, "UQ__userAcco__66DCF95C67CF0D5C")
                        .IsUnique();

                    b.HasIndex(new[] { "Email" }, "UQ__userAcco__AB6E6164A5A73C2C")
                        .IsUnique();

                    b.HasIndex(new[] { "UserId" }, "UQ__userAcco__CB9A1CDE1FFB70EC")
                        .IsUnique();

                    b.ToTable("userAccount");
                });

            modelBuilder.Entity("GameClubProject.UserGamerTag", b =>
                {
                    b.Property<int>("PKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("pKey")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GamerTag")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("gamerTag");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("userID");

                    b.HasKey("PKey")
                        .HasName("PK__userGame__4866A5D7C4862834");

                    b.HasIndex("UserId");

                    b.ToTable("userGamerTags");
                });

            modelBuilder.Entity("GameClubProject.VideoGameCharacter", b =>
                {
                    b.Property<string>("CharacterId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("characterID");

                    b.Property<string>("CountryName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("countryName");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("description");

                    b.Property<string>("GameId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("gameID");

                    b.Property<int?>("Gender")
                        .HasColumnType("int")
                        .HasColumnName("gender");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<int>("PKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("pKey")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Species")
                        .HasColumnType("int")
                        .HasColumnName("species");

                    b.HasKey("CharacterId")
                        .HasName("PK__videoGam__ADF9199F9CDC0201");

                    b.HasIndex("GameId");

                    b.ToTable("videoGameCharacters");
                });

            modelBuilder.Entity("GameClubProject.VideoGameCharacterAlias", b =>
                {
                    b.Property<int>("Pkey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("pkey")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AliasName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("aliasName");

                    b.Property<string>("CharacterId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("characterID");

                    b.HasKey("Pkey")
                        .HasName("PK__videoGam__40A62DB994424331");

                    b.HasIndex("CharacterId");

                    b.ToTable("videoGameCharacterAlias");
                });

            modelBuilder.Entity("GameClubProject.VideoGameGameMode", b =>
                {
                    b.Property<int>("PKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("pKey")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("createdAt");

                    b.Property<string>("GameId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("gameID");

                    b.Property<string>("GameModeName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("gameModeName");

                    b.Property<string>("GameModeUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("gameModeURL");

                    b.Property<string>("Slug")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("slug");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updatedAt");

                    b.HasKey("PKey")
                        .HasName("PK__videoGam__4866A5D7A59537A2");

                    b.HasIndex("GameId");

                    b.ToTable("videoGameGameModes");
                });

            modelBuilder.Entity("GameClubProject.VideoGameGenre", b =>
                {
                    b.Property<int>("PKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("pKey")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Checksum")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("checksum");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("createdAt");

                    b.Property<string>("GameId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("gameID");

                    b.Property<string>("GenreName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("genreName");

                    b.Property<string>("Slug")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("slug");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updatedAt");

                    b.Property<string>("Url")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("url");

                    b.HasKey("PKey")
                        .HasName("PK__videoGam__4866A5D796F744FF");

                    b.HasIndex("GameId");

                    b.ToTable("videoGameGenres");
                });

            modelBuilder.Entity("GameClubProject.VideoGameInvolvedCompany", b =>
                {
                    b.Property<int>("PKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("pKey")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("companyName");

                    b.Property<string>("Country")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("country");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("description");

                    b.Property<string>("GameId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("gameID");

                    b.Property<string>("ParentCompany")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("parentCompany");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime")
                        .HasColumnName("startDate");

                    b.Property<string>("Url")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("url");

                    b.HasKey("PKey")
                        .HasName("PK__videoGam__4866A5D7CDB1A089");

                    b.HasIndex("GameId");

                    b.ToTable("videoGameInvolvedCompanies");
                });

            modelBuilder.Entity("GameClubProject.VideoGameKeyword", b =>
                {
                    b.Property<int>("PKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("pKey")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GameId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("gameID");

                    b.Property<string>("Keyword")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("keyword");

                    b.HasKey("PKey")
                        .HasName("PK__videoGam__4866A5D74817F98D");

                    b.HasIndex("GameId");

                    b.ToTable("videoGameKeywords");
                });

            modelBuilder.Entity("GameClubProject.VideoGameMain", b =>
                {
                    b.Property<int>("PKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("pKey")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AgeRatingCategory")
                        .HasColumnType("int")
                        .HasColumnName("ageRatingCategory");

                    b.Property<string>("AgeRatingSynopsis")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ageRatingSynopsis");

                    b.Property<int?>("AgeRatingTitle")
                        .HasColumnType("int")
                        .HasColumnName("ageRatingTitle");

                    b.Property<int?>("Category")
                        .HasColumnType("int")
                        .HasColumnName("category");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("createdAt");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("description");

                    b.Property<DateTime?>("FirstReleaseDate")
                        .HasColumnType("datetime")
                        .HasColumnName("firstReleaseDate");

                    b.Property<string>("GameId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("gameID");

                    b.Property<int?>("GameStatus")
                        .HasColumnType("int")
                        .HasColumnName("gameStatus");

                    b.Property<string>("GameTitle")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("gameTitle");

                    b.Property<decimal?>("Rating")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("rating");

                    b.Property<int?>("TotalReviews")
                        .HasColumnType("int")
                        .HasColumnName("totalReviews");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updatedAt");

                    b.Property<string>("VersionTitle")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("versionTitle");

                    b.HasKey("PKey")
                        .HasName("PK__videoGam__4866A5D71B8AF9C7");

                    b.HasIndex(new[] { "GameId" }, "UQ__videoGam__DA90B4B3D5EC9B21")
                        .IsUnique();

                    b.ToTable("videoGameMain");
                });

            modelBuilder.Entity("GameClubProject.VideoGameMultiplayerMode", b =>
                {
                    b.Property<int>("PKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("pKey")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("CampaignCoop")
                        .HasColumnType("bit")
                        .HasColumnName("campaignCoop");

                    b.Property<bool?>("DropIn")
                        .HasColumnType("bit")
                        .HasColumnName("dropIn");

                    b.Property<string>("GameId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("gameID");

                    b.Property<bool?>("LanCoop")
                        .HasColumnType("bit")
                        .HasColumnName("lanCoop");

                    b.Property<bool?>("OfflineCoop")
                        .HasColumnType("bit")
                        .HasColumnName("offlineCoop");

                    b.Property<int?>("OfflineCoopMax")
                        .HasColumnType("int")
                        .HasColumnName("offlineCoopMax");

                    b.Property<bool?>("OnlineCoop")
                        .HasColumnType("bit")
                        .HasColumnName("onlineCoop");

                    b.Property<int?>("OnlineCoopMax")
                        .HasColumnType("int")
                        .HasColumnName("onlineCoopMax");

                    b.Property<int?>("OnlineMax")
                        .HasColumnType("int")
                        .HasColumnName("onlineMax");

                    b.Property<bool?>("Splitscreen")
                        .HasColumnType("bit")
                        .HasColumnName("splitscreen");

                    b.Property<bool?>("SplitscreenOnline")
                        .HasColumnType("bit")
                        .HasColumnName("splitscreenOnline");

                    b.HasKey("PKey")
                        .HasName("PK__videoGam__4866A5D7874FD802");

                    b.HasIndex("GameId");

                    b.ToTable("videoGameMultiplayerMode");
                });

            modelBuilder.Entity("GameClubProject.VideoGamePlatform", b =>
                {
                    b.Property<int>("PKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("pKey")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GameId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("gameID");

                    b.Property<string>("Platform")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("platform");

                    b.HasKey("PKey")
                        .HasName("PK__videoGam__4866A5D77FA951A8");

                    b.HasIndex("GameId");

                    b.ToTable("videoGamePlatforms");
                });

            modelBuilder.Entity("GameClubProject.VideoGameTheme", b =>
                {
                    b.Property<int>("PKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("pKey")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("createdAt");

                    b.Property<string>("GameId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("gameID");

                    b.Property<string>("ThemeName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("themeName");

                    b.Property<string>("ThemeSlug")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("themeSlug");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updatedAt");

                    b.Property<string>("Url")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("url");

                    b.HasKey("PKey")
                        .HasName("PK__videoGam__4866A5D7D2C0E38A");

                    b.HasIndex("GameId");

                    b.ToTable("videoGameThemes");
                });

            modelBuilder.Entity("GameClubProject.VideoGameUserContent", b =>
                {
                    b.Property<int>("PKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("pKey")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GameId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("gameID");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("userID");

                    b.Property<decimal>("UserRating")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("userRating");

                    b.Property<string>("UserReview")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("userReview");

                    b.HasKey("PKey")
                        .HasName("PK__videoGam__4866A5D7FF1B40F5");

                    b.HasIndex("GameId");

                    b.HasIndex("UserId");

                    b.ToTable("videoGameUserContent");
                });

            modelBuilder.Entity("GameClubProject.AlternativeGameName", b =>
                {
                    b.HasOne("GameClubProject.VideoGameMain", "Game")
                        .WithMany("AlternativeGameNames")
                        .HasForeignKey("GameId")
                        .HasConstraintName("FK__alternati__gameI__49C3F6B7")
                        .HasPrincipalKey("GameId")
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("GameClubProject.PersonalUserTrackedGame", b =>
                {
                    b.HasOne("GameClubProject.VideoGameMain", "Game")
                        .WithMany("PersonalUserTrackedGames")
                        .HasForeignKey("GameId")
                        .HasConstraintName("FK__personalU__gameI__48CFD27E")
                        .HasPrincipalKey("GameId")
                        .IsRequired();

                    b.HasOne("GameClubProject.UserAccount", "User")
                        .WithMany("PersonalUserTrackedGames")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__personalU__userI__47DBAE45")
                        .HasPrincipalKey("UserId")
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GameClubProject.UserAccount", b =>
                {
                    b.HasOne("GameClubProject.MembershipStatus", "MembershipStatus")
                        .WithMany("UserAccounts")
                        .HasForeignKey("MembershipStatusId")
                        .HasConstraintName("FK__userAccou__membe__45F365D3")
                        .HasPrincipalKey("MembershipStatusId")
                        .IsRequired();

                    b.Navigation("MembershipStatus");
                });

            modelBuilder.Entity("GameClubProject.UserGamerTag", b =>
                {
                    b.HasOne("GameClubProject.UserAccount", "User")
                        .WithMany("UserGamerTags")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__userGamer__userI__46E78A0C")
                        .HasPrincipalKey("UserId")
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("GameClubProject.VideoGameCharacter", b =>
                {
                    b.HasOne("GameClubProject.VideoGameMain", "Game")
                        .WithMany("VideoGameCharacters")
                        .HasForeignKey("GameId")
                        .HasConstraintName("FK__videoGame__gameI__4D94879B")
                        .HasPrincipalKey("GameId")
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("GameClubProject.VideoGameCharacterAlias", b =>
                {
                    b.HasOne("GameClubProject.VideoGameCharacter", "Character")
                        .WithMany("VideoGameCharacterAliases")
                        .HasForeignKey("CharacterId")
                        .HasConstraintName("FK__videoGame__chara__4E88ABD4");

                    b.Navigation("Character");
                });

            modelBuilder.Entity("GameClubProject.VideoGameGameMode", b =>
                {
                    b.HasOne("GameClubProject.VideoGameMain", "Game")
                        .WithMany("VideoGameGameModes")
                        .HasForeignKey("GameId")
                        .HasConstraintName("FK__videoGame__gameI__4AB81AF0")
                        .HasPrincipalKey("GameId")
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("GameClubProject.VideoGameGenre", b =>
                {
                    b.HasOne("GameClubProject.VideoGameMain", "Game")
                        .WithMany("VideoGameGenres")
                        .HasForeignKey("GameId")
                        .HasConstraintName("FK__videoGame__gameI__5070F446")
                        .HasPrincipalKey("GameId")
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("GameClubProject.VideoGameInvolvedCompany", b =>
                {
                    b.HasOne("GameClubProject.VideoGameMain", "Game")
                        .WithMany("VideoGameInvolvedCompanies")
                        .HasForeignKey("GameId")
                        .HasConstraintName("FK__videoGame__gameI__5441852A")
                        .HasPrincipalKey("GameId")
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("GameClubProject.VideoGameKeyword", b =>
                {
                    b.HasOne("GameClubProject.VideoGameMain", "Game")
                        .WithMany("VideoGameKeywords")
                        .HasForeignKey("GameId")
                        .HasConstraintName("FK__videoGame__gameI__534D60F1")
                        .HasPrincipalKey("GameId")
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("GameClubProject.VideoGameMultiplayerMode", b =>
                {
                    b.HasOne("GameClubProject.VideoGameMain", "Game")
                        .WithMany("VideoGameMultiplayerModes")
                        .HasForeignKey("GameId")
                        .HasConstraintName("FK__videoGame__gameI__5165187F")
                        .HasPrincipalKey("GameId")
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("GameClubProject.VideoGamePlatform", b =>
                {
                    b.HasOne("GameClubProject.VideoGameMain", "Game")
                        .WithMany("VideoGamePlatforms")
                        .HasForeignKey("GameId")
                        .HasConstraintName("FK__videoGame__gameI__4F7CD00D")
                        .HasPrincipalKey("GameId")
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("GameClubProject.VideoGameTheme", b =>
                {
                    b.HasOne("GameClubProject.VideoGameMain", "Game")
                        .WithMany("VideoGameThemes")
                        .HasForeignKey("GameId")
                        .HasConstraintName("FK__videoGame__gameI__52593CB8")
                        .HasPrincipalKey("GameId")
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("GameClubProject.VideoGameUserContent", b =>
                {
                    b.HasOne("GameClubProject.VideoGameMain", "Game")
                        .WithMany("VideoGameUserContents")
                        .HasForeignKey("GameId")
                        .HasConstraintName("FK__videoGame__gameI__4CA06362")
                        .HasPrincipalKey("GameId")
                        .IsRequired();

                    b.HasOne("GameClubProject.UserAccount", "User")
                        .WithMany("VideoGameUserContents")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__videoGame__userI__4BAC3F29")
                        .HasPrincipalKey("UserId")
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GameClubProject.MembershipStatus", b =>
                {
                    b.Navigation("UserAccounts");
                });

            modelBuilder.Entity("GameClubProject.UserAccount", b =>
                {
                    b.Navigation("PersonalUserTrackedGames");

                    b.Navigation("UserGamerTags");

                    b.Navigation("VideoGameUserContents");
                });

            modelBuilder.Entity("GameClubProject.VideoGameCharacter", b =>
                {
                    b.Navigation("VideoGameCharacterAliases");
                });

            modelBuilder.Entity("GameClubProject.VideoGameMain", b =>
                {
                    b.Navigation("AlternativeGameNames");

                    b.Navigation("PersonalUserTrackedGames");

                    b.Navigation("VideoGameCharacters");

                    b.Navigation("VideoGameGameModes");

                    b.Navigation("VideoGameGenres");

                    b.Navigation("VideoGameInvolvedCompanies");

                    b.Navigation("VideoGameKeywords");

                    b.Navigation("VideoGameMultiplayerModes");

                    b.Navigation("VideoGamePlatforms");

                    b.Navigation("VideoGameThemes");

                    b.Navigation("VideoGameUserContents");
                });
#pragma warning restore 612, 618
        }
    }
}
